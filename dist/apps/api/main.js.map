{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///external commonjs \"@nestjs/core\"","webpack:///./src/app.module.ts","webpack:///external commonjs \"tslib\"","webpack:///external commonjs \"@nestjs/common\"","webpack:///./src/modules/mail/mail.module.ts","webpack:///./src/modules/mail/service/mail.service.ts","webpack:///external commonjs \"@nestjs-modules/mailer\"","webpack:///./src/modules/mail/controller/mail.controller.ts","webpack:///external commonjs \"path\"","webpack:///external commonjs \"@nestjs-modules/mailer/dist/adapters/handlebars.adapter\"","webpack:///webpack/bootstrap","webpack:///./src/main.ts"],"sourcesContent":["module.exports = require(\"@nestjs/core\");","import { Module } from '@nestjs/common';\n\nimport { MailModule } from './modules/mail/mail.module';\nimport { MailerModule } from '@nestjs-modules/mailer';\nimport { join } from 'path';\n\nimport { HandlebarsAdapter } from '@nestjs-modules/mailer/dist/adapters/handlebars.adapter';\n@Module({\n  imports: [\n    MailModule,\n    MailerModule.forRoot({\n      transport: process.env.EMAIL_TRANSPORT,\n      defaults: {\n        from: process.env.EMAIL_FROM,\n      },\n      template: {\n        dir: join(__dirname, 'assets/templates'),\n        adapter: new HandlebarsAdapter(), // or new PugAdapter() or new EjsAdapter()\n        options: {\n          strict: true,\n        },\n      },\n    }),\n  ]\n})\nexport class AppModule { }\n","module.exports = require(\"tslib\");","module.exports = require(\"@nestjs/common\");","import { Module, forwardRef } from '@nestjs/common';\r\nimport { MailService } from './service/mail.service';\r\nimport { MailController } from './controller/mail.controller';\r\n\r\n@Module({\r\n  imports: [],\r\n  controllers: [MailController],\r\n  providers: [MailService],\r\n  exports: [MailService]\r\n})\r\nexport class MailModule { }\r\n","import { Injectable } from '@nestjs/common';\r\nimport { MailerService } from '@nestjs-modules/mailer';\r\n\r\n@Injectable()\r\nexport class MailService {\r\n  constructor(private mailerService: MailerService) {\r\n  }\r\n\r\n\r\n  public sendContactUs = async (contact: string, message: string) => {\r\n    await this.mailerService.sendMail({ to: [process.env.EMAIL_USER], subject: 'Nuevo mensaje', template: 'contactUs.hbs', context: { contact, message: message.replace(/(\\r\\n|\\n|\\r)/gm, '<br>') }, bcc: [process.env.EMAIL_USER] })\r\n  }\r\n}\r\n","module.exports = require(\"@nestjs-modules/mailer\");","import {\r\n  Controller,\r\n  Get,\r\n  Post,\r\n  Body,\r\n  Patch,\r\n  Param,\r\n  Delete,\r\n  UseGuards,\r\n  UseInterceptors,\r\n  UploadedFiles,\r\n} from '@nestjs/common';\r\nimport { MailService } from '../service/mail.service';\r\nimport { AnyFilesInterceptor } from \"@nestjs/platform-express\";\r\nimport { Multer } from 'multer'\r\n\r\n@Controller('mail')\r\nexport class MailController {\r\n  constructor(private readonly mailService: MailService) { }\r\n\r\n  @Post('sendRequest')\r\n  async sendRequest(@Body('contact') contact: string, @Body('message') message: string) {\r\n    await this.mailService.sendContactUs(contact, message)\r\n  }\r\n  \r\n}\r\n","module.exports = require(\"path\");","module.exports = require(\"@nestjs-modules/mailer/dist/adapters/handlebars.adapter\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * This is not a production server yet!\n * This is only a minimal backend to get started.\n */\n\nimport { Logger } from '@nestjs/common';\nimport { NestFactory } from '@nestjs/core';\n\nimport { AppModule } from './app.module';\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule, { cors: true });\n  const port = process.env.PORT || 3000;\n  await app.listen(port);\n}\n\nbootstrap();\n"],"names":[],"sourceRoot":""}